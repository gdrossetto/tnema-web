[{"/home/gabriel/Development/tnema-web/src/index.js":"1","/home/gabriel/Development/tnema-web/src/App.js":"2","/home/gabriel/Development/tnema-web/src/reportWebVitals.js":"3","/home/gabriel/Development/tnema-web/src/pages/home/home.js":"4","/home/gabriel/Development/tnema-web/src/services/movies.service.ts.js":"5","/home/gabriel/Development/tnema-web/src/components/navbar/navbar.component.js":"6","/home/gabriel/Development/tnema-web/src/pages/search/search.js":"7","/home/gabriel/Development/tnema-web/src/components/movie-card/movie-card.component.js":"8","/home/gabriel/Development/tnema-web/src/pages/details/details.js":"9","/home/gabriel/Development/tnema-web/src/Reducer.js":"10","/home/gabriel/Development/tnema-web/src/pages/watchlist/watchlist.js":"11"},{"size":645,"mtime":1612395802413,"results":"12","hashOfConfig":"13"},{"size":1259,"mtime":1612631983505,"results":"14","hashOfConfig":"13"},{"size":362,"mtime":1611445031098,"results":"15","hashOfConfig":"13"},{"size":1116,"mtime":1612643355066,"results":"16","hashOfConfig":"13"},{"size":1362,"mtime":1612642289122,"results":"17","hashOfConfig":"13"},{"size":3104,"mtime":1612632840981,"results":"18","hashOfConfig":"13"},{"size":3767,"mtime":1612631751874,"results":"19","hashOfConfig":"13"},{"size":724,"mtime":1611600882196,"results":"20","hashOfConfig":"13"},{"size":2759,"mtime":1612644493706,"results":"21","hashOfConfig":"13"},{"size":644,"mtime":1612631235248,"results":"22","hashOfConfig":"13"},{"size":734,"mtime":1612632481262,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"1y6yo0e",{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"26"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"26"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"26"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"/home/gabriel/Development/tnema-web/src/index.js",[],["50","51"],"/home/gabriel/Development/tnema-web/src/App.js",["52"],"import \"./App.css\";\nimport Home from \"./pages/home/home\";\nimport Navbar from \"./components/navbar/navbar.component\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Search from \"./pages/search/search\";\nimport { createBrowserHistory } from \"history\";\nimport Details from \"./pages/details/details\";\nimport WatchList from \"./pages/watchlist/watchlist\";\nimport { useEffect } from \"react\";\nimport {getConfig} from \"./services/movies.service.ts\";\nimport {useDispatch} from \"react-redux\";\n\nconst history = createBrowserHistory();\n\nfunction App() {\n\n  const dispatch = useDispatch();\n\n  async function getMovieDbConfig() {\n    let configuration = await getConfig();\n    dispatch({type: 'SET_CONFIG', config: configuration.images,});\n  }\n\n  useEffect(()=>{\n    getMovieDbConfig();\n  },[])\n\n  return (\n    <div className=\"app-container\">\n      <Router history={history}>\n        <Navbar></Navbar>\n        <Switch>\n          <Route exact path=\"/\" component={Home}></Route>\n          <Route path=\"/search\" component={Search}></Route>\n          <Route path=\"/movie/:id\" component={Details}></Route>\n          <Route path=\"/watchlist\" component={WatchList}></Route>\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","/home/gabriel/Development/tnema-web/src/reportWebVitals.js",[],"/home/gabriel/Development/tnema-web/src/pages/home/home.js",["53","54","55"],"/home/gabriel/Development/tnema-web/src/services/movies.service.ts.js",[],"/home/gabriel/Development/tnema-web/src/components/navbar/navbar.component.js",["56","57","58","59"],"/home/gabriel/Development/tnema-web/src/pages/search/search.js",["60","61","62","63","64"],"import \"./search.styles.scss\";\nimport React, {useEffect, useState} from \"react\";\nimport {\n    getConfig,\n    getMovieGenres,\n    getMovies,\n    searchMovies,\n} from \"../../services/movies.service.ts\";\nimport {useHistory, useLocation} from \"react-router-dom\";\nimport MovieCard from \"../../components/movie-card/movie-card.component\";\nimport {useDispatch, useSelector} from \"react-redux\";\n\nfunction useQuery() {\n    return new URLSearchParams(useLocation().search);\n}\n\nconst Search = () => {\n    const [featured, setFeatured] = useState([]);\n    const [searchString, setSearchString] = useState(\"\");\n    const [generos, setGeneros] = useState([]);\n\n    const dispatch = useDispatch();\n    const config = useSelector(state => state.config);\n    const history = useHistory();\n    const query = useQuery();\n\n    async function getMovieGenreList() {\n        let genres = await getMovieGenres();\n        setGeneros(genres);\n    }\n\n    useEffect(() => {\n        getMovieGenreList();\n    }, []);\n\n    async function getFeaturedMovies(searchQuery) {\n        let movies = await searchMovies(searchQuery);\n        setFeatured(movies?.results);\n    }\n\n\n    useEffect(() => {\n        setSearchString(query.get(\"search\"));\n    }, []);\n\n    useEffect(() => {\n        getFeaturedMovies(query.get(\"search\"));\n    }, [config]);\n\n    useEffect(() => {\n        getFeaturedMovies(query.get(\"search\"));\n    }, [query.get(\"search\")]);\n\n    return (\n        <main className=\"pt-5\">\n            <div className=\"col-md-6 m-auto mb-5\">\n                <h1 className=\"mb-5\">What are you looking for?</h1>\n                <form className=\"p-4\">\n                    <div className={\"row\"}>\n                        <div className=\"form-group col-md-3\">\n                            <select className={'form-select'}>\n                                <option>All</option>\n                                {generos.map((genero) => {\n                                    return <option key={genero.id}>{genero?.name}</option>;\n                                })}\n                            </select>\n                        </div>\n                        <div className={\"d-flex flex-row col-md-9\"}>\n                            <input\n                                type=\"text\"\n                                className=\"form-control\"\n                                id=\"searchString\"\n                                value={searchString}\n                                aria-describedby=\"search\"\n                                onChange={(e) => setSearchString(e.target.value)}\n                            />\n                            <button\n                                onClick={() => {\n                                    history.push({\n                                        pathname: \"/search\",\n                                        search: `?search=${searchString}`,\n                                    });\n                                }}\n                                className=\"btn btn-secondary\"\n                                type=\"button\"\n                            >\n                                Search\n                            </button>\n                        </div>\n                    </div>\n                </form>\n            </div>\n            <h1>Search Results</h1>\n\n            <div className=\"item-list\">\n                {featured?.length > 0 ? (\n                    featured?.map((movie, index) => {\n                        return <MovieCard movie={movie} config={config}/>;\n                    })\n                ) : (\n                    <b className=\"\">No Results</b>\n                )}\n                <div className=\"invisible\"></div>\n                <div className=\"invisible\"></div>\n            </div>\n        </main>\n    );\n};\n\nexport default Search;\n","/home/gabriel/Development/tnema-web/src/components/movie-card/movie-card.component.js",["65","66","67"],"import \"./movie-card.component.styles.scss\";\nimport React, { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { getConfig } from \"../../services/movies.service.ts\";\n\nconst MovieCard = ({ movie, config }) => {\n  const history = useHistory();\n\n  return (\n    <article\n      onClick={() => {\n        history.push({\n          pathname: `/movie/${movie.id}`,\n        });\n      }}\n      className=\"card\"\n      key={movie?.id}\n    >\n      {config?.poster_sizes ? (\n        <img\n          className={\"card-img\"}\n          src={`${config?.base_url}${config?.poster_sizes[3]}${movie?.poster_path}`}\n          alt=\"\"\n        />\n      ) : null}\n    </article>\n  );\n};\n\nexport default MovieCard;\n","/home/gabriel/Development/tnema-web/src/pages/details/details.js",["68","69","70"],"/home/gabriel/Development/tnema-web/src/Reducer.js",[],"/home/gabriel/Development/tnema-web/src/pages/watchlist/watchlist.js",[],{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","severity":1,"message":"76","line":26,"column":5,"nodeType":"77","endLine":26,"endColumn":7,"suggestions":"78"},{"ruleId":"79","severity":1,"message":"80","line":4,"column":5,"nodeType":"81","messageId":"82","endLine":4,"endColumn":14},{"ruleId":"79","severity":1,"message":"83","line":6,"column":5,"nodeType":"81","messageId":"82","endLine":6,"endColumn":19},{"ruleId":"79","severity":1,"message":"84","line":13,"column":11,"nodeType":"81","messageId":"82","endLine":13,"endColumn":19},{"ruleId":"79","severity":1,"message":"85","line":1,"column":16,"nodeType":"81","messageId":"82","endLine":1,"endColumn":25},{"ruleId":"79","severity":1,"message":"86","line":2,"column":9,"nodeType":"81","messageId":"82","endLine":2,"endColumn":20},{"ruleId":"79","severity":1,"message":"87","line":4,"column":9,"nodeType":"81","messageId":"82","endLine":4,"endColumn":23},{"ruleId":"79","severity":1,"message":"88","line":9,"column":11,"nodeType":"81","messageId":"82","endLine":9,"endColumn":21},{"ruleId":"79","severity":1,"message":"89","line":6,"column":5,"nodeType":"81","messageId":"82","endLine":6,"endColumn":14},{"ruleId":"75","severity":1,"message":"90","line":49,"column":8,"nodeType":"77","endLine":49,"endColumn":10,"suggestions":"91"},{"ruleId":"75","severity":1,"message":"92","line":53,"column":8,"nodeType":"77","endLine":53,"endColumn":16,"suggestions":"93"},{"ruleId":"75","severity":1,"message":"92","line":57,"column":8,"nodeType":"77","endLine":57,"endColumn":29,"suggestions":"94"},{"ruleId":"75","severity":1,"message":"95","line":57,"column":9,"nodeType":"96","endLine":57,"endColumn":28},{"ruleId":"79","severity":1,"message":"85","line":2,"column":17,"nodeType":"81","messageId":"82","endLine":2,"endColumn":26},{"ruleId":"79","severity":1,"message":"97","line":2,"column":28,"nodeType":"81","messageId":"82","endLine":2,"endColumn":36},{"ruleId":"79","severity":1,"message":"80","line":4,"column":10,"nodeType":"81","messageId":"82","endLine":4,"endColumn":19},{"ruleId":"75","severity":1,"message":"98","line":33,"column":8,"nodeType":"77","endLine":33,"endColumn":16,"suggestions":"99"},{"ruleId":"75","severity":1,"message":"100","line":37,"column":8,"nodeType":"77","endLine":37,"endColumn":12,"suggestions":"101"},{"ruleId":"102","severity":1,"message":"103","line":68,"column":29,"nodeType":"104","endLine":68,"endColumn":86},"no-native-reassign",["105"],"no-negated-in-lhs",["106"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getMovieDbConfig'. Either include it or remove the dependency array.","ArrayExpression",["107"],"no-unused-vars","'getConfig' is defined but never used.","Identifier","unusedVar","'getMovieVideos' is defined but never used.","'dispatch' is assigned a value but never used.","'useEffect' is defined but never used.","'useDispatch' is defined but never used.","'getMovieGenres' is defined but never used.","'movieTotal' is assigned a value but never used.","'getMovies' is defined but never used.","React Hook useEffect has missing dependencies: 'getMovieDbConfig' and 'query'. Either include them or remove the dependency array.",["108"],"React Hook useEffect has a missing dependency: 'query'. Either include it or remove the dependency array.",["109"],["110"],"React Hook useEffect has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checked.","CallExpression","'useState' is defined but never used.","React Hook useEffect has a missing dependency: 'getMovie'. Either include it or remove the dependency array.",["111"],"React Hook useEffect has a missing dependency: 'getVideos'. Either include it or remove the dependency array.",["112"],"jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"113","fix":"114"},{"desc":"115","fix":"116"},{"desc":"117","fix":"118"},{"desc":"119","fix":"120"},{"desc":"121","fix":"122"},{"desc":"123","fix":"124"},"Update the dependencies array to be: [getMovieDbConfig]",{"range":"125","text":"126"},"Update the dependencies array to be: [getMovieDbConfig, query]",{"range":"127","text":"128"},"Update the dependencies array to be: [config, query]",{"range":"129","text":"130"},"Update the dependencies array to be: [query]",{"range":"131","text":"132"},"Update the dependencies array to be: [config, getMovie]",{"range":"133","text":"134"},"Update the dependencies array to be: [getVideos, id]",{"range":"135","text":"136"},[810,812],"[getMovieDbConfig]",[1407,1409],"[getMovieDbConfig, query]",[1490,1498],"[config, query]",[1579,1600],"[query]",[960,968],"[config, getMovie]",[1022,1026],"[getVideos, id]"]